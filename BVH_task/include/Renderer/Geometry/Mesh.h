/* Mesh.h
 * Author : Kozhukharov Nikita
 * Mesh class is used to draw connected object, generated by one array of vertices
 */

#pragma once

#include <Renderer/Shaders.h>
#include <Math/Vec.h>
#include <vector>
#include <string>


struct Vertex {
    vec3 Position;
    vec3 Normal;
    vec2 TexCoords;
    Vertex(vec3 p, vec3 n, vec2 t);
};

struct Texture {
    unsigned int id;
    std::string type;
};


class Mesh {
    int drawMode;
    int shaderId;
protected:
    bool countShades = false;
    glm::vec3 pos;
    glm::vec4 color;
    unsigned int VAO, VBO, EBO;
    void setupMesh();

    std::vector<Vertex>       vertices;
    std::vector<unsigned int> indices;
    std::vector<Texture>      textures;

public:
    Mesh(std::vector<Vertex> & vertices, std::vector<unsigned int> & indices,
        std::vector<Texture> & textures, glm::vec4 color = glm::vec4(0.2, 0.4, 0.6, 1.0));
    virtual void draw(const ShaderProgram & shader);            

    void setDrawMode(int mode);
    void setShader(int shaderId);
    void setColor(glm::vec4 col);
    void setShadeMode(bool countShades);
    int getShaderId();
    ~Mesh();
};
